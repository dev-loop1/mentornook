const API_BASE_URL = '[https://mentornook.onrender.com/api](https://mentornook.onrender.com/api)';function showError(e,t){const n=document.getElementById(e);n?(n.textContent=t,n.style.display="block"):console.warn(`Error element not found: ${e}`)}function clearError(e){const t=document.getElementById(e);t&&(t.textContent="",t.style.display="none")}function clearAllErrors(e){if(!e)return;e.querySelectorAll(".error-message, .form-error").forEach((e=>{e.textContent="",e.style.display="none",e.classList.contains("form-error")&&e.classList.remove("visible")}))}function showGeneralError(e,t){const n=document.getElementById(e);n?(n.textContent=t,n.style.display="block",n.classList.add("visible")):console.warn(`General error element not found: ${e}`)}function validateEmail(e){return/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/.test(String(e).toLowerCase())}function validatePassword(e,t=8){return e&&e.length>=t}function isEmpty(e){return!e||""===e.trim()}function saveAuthInfo(e,t){"undefined"!=typeof localStorage?(localStorage.setItem("authToken",e),localStorage.setItem("userInfo",JSON.stringify(t))):console.error("localStorage is not available. Cannot save authentication info.")}function getAuthToken(){return"undefined"!=typeof localStorage?localStorage.getItem("authToken"):null}function getUserInfo(){if("undefined"!=typeof localStorage){const e=localStorage.getItem("userInfo");if(e)try{return JSON.parse(e)}catch(e){return console.error("Error parsing user info from localStorage:",e),null}}return null}function clearAuthInfo(){"undefined"!=typeof localStorage&&(localStorage.removeItem("authToken"),localStorage.removeItem("userInfo"))}function isAuthenticated(){return!!getAuthToken()}function getUrlParams(){const e={},t=window.location.search.substring(1),n=/([^&=]+)=?([^&]*)/g;let o;for(;null!==(o=n.exec(t));){const t=decodeURIComponent(o[1]),n=decodeURIComponent(o[2].replace(/\+/g," "));e[t]=n}return e}function getCsrfToken(){let e=null;if(document.cookie&&""!==document.cookie){const t=document.cookie.split(";");for(let n=0;n<t.length;n++){let o=t[n].trim();if(o.startsWith("csrftoken=")){e=decodeURIComponent(o.substring(10));break}}}return e}async function WorkspaceApi(e,t="GET",n=null,o=!0){const r=t.toUpperCase();if(!e||!e.startsWith("/"))return console.error("WorkspaceApi Error: Endpoint must be provided and start with '/'."),{success:!1,error:"Invalid API endpoint provided.",status:null};const s=`${API_BASE_URL}${e}`,a={Accept:"application/json"},i=getAuthToken();if(o){if(!i)return console.error("WorkspaceApi Error: Auth token missing for protected route:",e),{success:!1,error:"Authentication required. Please log in.",status:401};a.Authorization=`Token ${i}`}if(!["GET","HEAD","OPTIONS","TRACE"].includes(r)){const t=getCsrfToken();t?a["X-CSRFToken"]=t:console.warn(`WorkspaceApi Warning: CSRF token not found for ${r} request to ${e}. Request might fail.`)}const c={method:r,headers:a};n&&(n instanceof FormData?c.body=n:(a["Content-Type"]="application/json",c.body=JSON.stringify(n)));try{const t=await fetch(s,c);if(204===t.status||"0"===t.headers.get("content-length"))return{success:!0,status:t.status,data:null};let n;try{n=await t.json()}catch(n){const o=await t.text().catch((()=>"Could not read response text."));return console.error(`WorkspaceApi Error: Failed to parse JSON response from ${e} (Status: ${t.status}). Response Text:`,o),{success:!1,error:`Invalid response format from server (Status: ${t.status}).`,status:t.status}}if(!t.ok){return console.error(`WorkspaceApi Error: ${t.status} ${t.statusText} for ${e}`,n),{success:!1,error:n.detail||(Array.isArray(n)?n.join(", "):null)||("object"==typeof n?JSON.stringify(n):`Request failed with status ${t.status}.`),status:t.status,data:n}}return{success:!0,data:n,status:t.status}}catch(t){return console.error(`WorkspaceApi Network/Fetch Error for ${e}:`,t),{success:!1,error:"Failed to connect to the server. Please check your network connection.",status:null}}}function initializeTagInput(e,t,n,o){const r=document.getElementById(e),s=document.getElementById(t),a=document.getElementById(n),i=document.getElementById(o);if(!(r&&s&&a&&i))return void console.error("Tag input initialization failed: One or more elements not found.",{containerId:e,inputId:t,tagsDisplayId:n,hiddenInputId:o});let c=[];function l(){if(i.value=c.join(","),i.dispatchEvent(new Event("change",{bubbles:!0})),c.length>0){clearError(`${o.replace(/^profile-|^filter-/,"")}-error`)}}function u(e){const t=e.trim().replace(/,/g,"");if(t.length<1||c.includes(t))return void(s.value="");c.push(t);const n=document.createElement("span");n.className="tag-item",n.textContent=t;const o=document.createElement("button");o.type="button",o.className="tag-remove-btn",o.textContent="×",o.setAttribute("aria-label",`Remove ${t}`),o.addEventListener("click",(e=>{e.stopPropagation(),d(t,n)})),n.appendChild(o),a.appendChild(n),l(),s.value=""}function d(e,t){c=c.filter((t=>t!==e)),t.remove(),l(),s.focus()}function f(){c=i.value?i.value.split(",").map((e=>e.trim())).filter((e=>e.length>0)):[],a.innerHTML="",c.forEach((e=>{const t=document.createElement("span");t.className="tag-item",t.textContent=e;const n=document.createElement("button");n.type="button",n.className="tag-remove-btn",n.textContent="×",n.setAttribute("aria-label",`Remove ${e}`),n.addEventListener("click",(n=>{n.stopPropagation(),d(e,t)})),t.appendChild(n),a.appendChild(t)})),l()}s.addEventListener("keydown",(e=>{if(","===e.key||"Enter"===e.key)e.preventDefault(),s.value.trim()&&u(s.value);else if("Backspace"===e.key&&""===s.value&&c.length>0){const e=a.querySelector(".tag-item:last-child");if(e){d(c[c.length-1],e)}}})),s.addEventListener("blur",(()=>{s.value.trim()&&u(s.value)})),r.addEventListener("click",(()=>{s.focus()})),f(),r.refreshTags=f}